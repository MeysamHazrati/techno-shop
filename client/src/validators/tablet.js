import { object, string, number, boolean } from "yup";

const validator = object({
  length: number().required("طول الزامی است.").min(100, "طول باید حداقل 100 باشد.").max(500, "طول باید حداکثر 500 باشد."),
  width: number().required("عرض الزامی است.").min(50, "عرض باید حداقل 50 باشد.").max(500, "عرض باید حداکثر 500 باشد."),
  thickness: number().required("ضخامت الزامی است.").min(2, "ضخامت باید حداقل 2 باشد.").max(20, "ضخامت باید حداکثر 20 باشد."),
  weight: number().required("وزن الزامی است.").min(100, "وزن باید حداقل 100 باشد.").max(1000, "وزن باید حداکثر 1000 باشد."),
  chip: string().required("تراشه الزامی است.").min(5, "تراشه باید حداقل 5 کاراکتر باشد.").max(100, "تراشه باید حداکثر 100 کاراکتر باشد."),
  operatingSystem: string().required("سیستم عامل الزامی است.").oneOf(["Android", "iOS"], "سیستم عامل باید Android یا iOS باشد."),
  operatingSystemVersion: number().required("نسخه سیستم عامل الزامی است.").min(12, "نسخه سیستم عامل باید حداقل 12 باشد.").max(20, "نسخه سیستم عامل باید حداکثر 20 باشد."),
  internalMemory: number().required("حافظه داخلی الزامی است.").oneOf([16, 32, 64, 128, 256, 512, 1024], "حافظه داخلی باید 16، 32، 64، 128، 256، 512 یا 1024 باشد."),
  RAM: number().required("رم الزامی است.").min(2, "رم باید حداقل 2 باشد.").max(50, "رم باید حداکثر 50 باشد."),
  memoryCard: string().required("کارت حافظه الزامی است.").oneOf(["مجزا", "مشترک با سیم‌کارت", "فاقد پشتیبانی"], "کارت حافظه باید مجزا، مشترک با سیم‌کارت یا فاقد پشتیبانی باشد."),
  screen: string().required("صفحه نمایش الزامی است.").min(3, "صفحه نمایش باید حداقل 3 کاراکتر باشد.").max(50, "صفحه نمایش باید حداکثر 50 کاراکتر باشد."),
  screenSize: number().required("اندازه صفحه نمایش الزامی است.").min(5, "اندازه صفحه نمایش باید حداقل 5 باشد.").max(20, "اندازه صفحه نمایش باید حداکثر 20 باشد."),
  resolutionWidth: number().required("عرض رزولوشن الزامی است.").min(500, "عرض رزولوشن باید حداقل 500 باشد.").max(10000, "عرض رزولوشن باید حداکثر 10000 باشد."),
  resolutionHeight: number().required("ارتفاع رزولوشن الزامی است.").min(500, "ارتفاع رزولوشن باید حداقل 500 باشد.").max(10000, "ارتفاع رزولوشن باید حداکثر 10000 باشد."),
  SIMCard: number().required("سیم‌کارت الزامی است.").oneOf([1, 2], "سیم‌کارت باید 1 یا 2 باشد."),
  network: string().required("شبکه ارتباطی الزامی است.").oneOf(["2G", "3G", "4G", "5G"], "شبکه ارتباطی باید 2G، 3G، 4G یا 5G باشد."),
  battery: string().required("باطری الزامی است.").min(5, "باطری باید حداقل 5 کاراکتر باشد.").max(50, "باطری باید حداکثر 50 کاراکتر باشد."),
  batteryCapacity: number().required("ظرفیت باطری الزامی است.").min(5000, "ظرفیت باطری باید حداقل 5000 باشد.").max(10000, "ظرفیت باطری باید حداکثر 10000 باشد."),
  chargingPort: string().required("درگاه شارژ الزامی است.").oneOf(["Micro-USB", "USB Type-C", "Lightning"], "درگاه شارژ باید Micro-USB، USB Type-C یا Lightning باشد."),
  chargingSpeed: number().required("سرعت شارژ الزامی است.").min(15, "سرعت شارژ باید حداقل 15 باشد.").max(150, "سرعت شارژ باید حداکثر 150 باشد."),
  camera: number().required("دوربین الزامی است.").min(1, "دوربین باید حداقل 1 باشد.").max(5, "دوربین باید حداکثر 5 باشد."),
  photoResolution: number().required("رزولوشن عکس الزامی است.").min(8, "رزولوشن عکس باید حداقل 8 باشد.").max(100, "رزولوشن عکس باید حداکثر 100 باشد."),
  videoResolutionWidth: number().required("عرض رزولوشن ویدئو الزامی است.").min(500, "عرض رزولوشن ویدئو باید حداقل 500 باشد.").max(10000, "عرض رزولوشن ویدئو باید حداکثر 10000 باشد."),
  videoResolutionHeight: number().required("ارتفاع رزولوشن ویدئو الزامی است.").min(500, "ارتفاع رزولوشن ویدئو باید حداقل 500 باشد.").max(10000, "ارتفاع رزولوشن ویدئو باید حداکثر 10000 باشد."),
  videoFPS: number().required("سرعت ویدئو الزامی است.").min(30, "سرعت ویدئو باید حداقل 30 باشد.").max(120, "سرعت ویدئو باید حداکثر 120 باشد."),
  headphoneJack: string().required("جک هدفون الزامی است.").oneOf(["3.5mm Jack", "USB Type-C", "Lightning"], "جک هدفون باید 3.5mm Jack، USB Type-C یا Lightning باشد."),
  hasFingerprintSensor: boolean().required("وضعیت حسگر اثرانگشت الزامی است."),
  isWaterproof: boolean().required("وضعیت ضد آب الزامی است."),
});

export default validator;